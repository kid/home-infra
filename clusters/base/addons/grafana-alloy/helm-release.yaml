apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: alloy
  namespace: flux-system
spec:
  releaseName: alloy
  targetNamespace: grafana-alloy
  interval: 30m
  chart:
    spec:
      chart: alloy
      version: 0.6.0
      sourceRef:
        kind: HelmRepository
        name: grafana
  values:
    alloy:
      envFrom:
        - secretRef:
            name: grafana-cloud
      configMap:
        content: |-
          logging {
            level  = "info"
            format = "logfmt"
          }

          discovery.kubernetes "pods" {
            role = "pod"
          }

          discovery.kubernetes "nodes" {
            role = "node"
          }

          discovery.kubernetes "services" {
            role = "service"
          }

          discovery.kubernetes "endpoints" {
            role = "endpoints"
          }

          discovery.kubernetes "endpointslices" {
            role = "endpointslice"
          }

          otelcol.receiver.otlp "default" {
            grpc {
              endpoint = "127.0.0.1:4317"
            }

            http {
              endpoint = "127.0.0.1:4318"
            }

            output {
              metrics = [otelcol.processor.batch.example.input]
              logs    = [otelcol.processor.batch.example.input]
              # traces  = [otelcol.processor.batch.example.input]
            }
          }

          otelcol.exporter.prometheus "grafana_cloud_metrics" {
            forward_to = [prometheus.remote_write.grafana_cloud_metrics.receiver]
          }

          prometheus.exporter.self "default" {}

          prometheus.scrape "default" {
            targets = prometheus.exporter.self.default.targets
            forward_to = [prometheus.remote_write.grafana_cloud_metrics.receiver]
          }

          prometheus.remote_write "grafana_cloud_metrics" {
            endpoint {
              url = env("GCLOUD_HOSTED_METRICS_URL")

              basic_auth {
                username = env("GCLOUD_HOSTED_METRICS_ID")
                password = env("GCLOUD_RW_API_KEY")
              }
            }
          }

          otelcol.exporter.loki "grafana_cloud_logs" {
            forward_to = [loki.write.grafana_cloud_logs.receiver]
          }

          loki.write "grafana_cloud_logs" {
            endpoint {
              url = env("GCLOUD_HOSTED_LOGS_URL")

              basic_auth {
                username = 5252
                password = env("GRAFANA_CLOUD_API_KEY")
              }
            }
          }
  driftDetection:
    mode: enabled
